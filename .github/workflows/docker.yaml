name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:

  build:
    name: Pull and Push
    runs-on: ubuntu-latest
    steps:
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Log in to Aliyun Docker registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.ALIYUN_REGISTRY_USER }}
        password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
        registry: ${{ secrets.ALIYUN_REGISTRY }}

    - name: Build and push image to Aliyun
      run: |

        # 处理镜像并上传
        while IFS= read -r line; do
            [[ -z "$line" ]] && continue
            image=$(echo "$line" | awk '{print $NF}')
            image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
            name_space=$(echo "$image" | awk -F'/' '{if (NF>1) print $1}' | awk '{print $1}')
            image_name=$(echo "$image_name_tag" | awk -F':' '{print $1}')
            platform=$(echo "$line" | awk -F'--platform[ =]' '{if (NF>1) print $2}' | awk '{print $1}')
            platform_prefix=""
            if [ -n "$platform" ]; then
                platform_prefix="${platform//\//_}_"
            fi

            new_image="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$platform_prefix$image_name_tag"
            
            if docker manifest inspect $new_image >/dev/null 2>&1; then
                echo "Image $new_image already exists in registry, skipping pull and push."
            else
                echo "docker pull $line"
                docker pull $line
                echo "docker tag $image $new_image"
                docker tag $image $new_image
                echo "docker push $new_image"
                docker push $new_image

                # 记录成功推送的镜像链接
                echo "$new_image" >> pushed_images.txt
            fi
        done < images.txt

    - name: Upload pushed images log
      uses: actions/upload-artifact@v3
      with:
        name: pushed-images-log
        path: pushed_images.txt
